@model Blog.Models.ViewModels.BloggViewModel

@{
    ViewData["Title"] = "ReadBlog";
}

<h1>@Model.Name</h1>
<hr />
<p>
    Created: @Model.Created, Modified: @Model.Modified,
    @if (@Model.Owner.UserName == null)
    {<a>No user</a> }
    else
    {@Model.Owner.UserName}
</p>
<hr />
<p>@Html.ActionLink("Create new post", "CreatePost", new { blogId = @Model.BlogId })</p>
<hr />
<p>Posts:....</p>
<hr />

<table class="table table-hover">
    <tr>
        <th >Bruker </th>
        <th>@Html.DisplayNameFor(model => model.Name) </th>

        <th>@Html.DisplayNameFor(model => model.Content)</th>
    </tr>

    @foreach (var item in Model.Posts)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Owner)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Content)
            </td>
            <td>
                @Html.ActionLink("Read comments", "ReadPost", new { id = item.PostId }) |

                @Html.ActionLink("Edit", "EditPost", new { id = item.PostId }) |

                @Html.ActionLink("Delete", "Delete", new { id = item.PostId })
            </td>
        </tr>
    }

</table>
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
