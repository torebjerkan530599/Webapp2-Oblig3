@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Authorization
@using Blog.Models.Entities
@model Blog.Models.ViewModels.PostViewModel


@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager
@inject IAuthorizationService AuthorizationService
@{
    ViewData["Title"] = "Innlegg";
}



<h1>Kommenarer for innlegget "@Model.Title"</h1>
<hr />
<p>
    @*Created: @Model.Created,*@
    @if (@Model.Owner == null)
    {<a> Bruker er ikke registrert</a> }
    else
    {<a> Eier av innlegg: @Model.Owner.UserName</a>}
</p>

<!--h5>Test om jeg får tak i eier etter 'create comment' via ViewBag: @*ViewBag.Message*@</h5-->


<div>

    <table class="table table-hover">
        <tr>
            <th>Eier</th>
            <th>Kommentar</th>
            <th>Opprettet</th>
            <th>Valg</th>
        </tr>


        @try
        {
            @foreach (var item in Model.Comments)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Owner.UserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Text)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Created)
                    </td>

                    <td>
                        @Html.ActionLink("Edit", "EditComment", "Comment", new { CommentId = item.CommentId }) |

                        @Html.ActionLink("Delete", "DeleteComment", "Comment", new { CommentId = item.CommentId })
                    </td>
                </tr>
            }
        }
        catch (NullReferenceException e)
        {
            Console.WriteLine(e.ToString());
        }


    </table>
    <p>@Html.ActionLink("Opprett ny kommentar", "CreateComment", "Comment", new { PostId = @Model.PostId, id = @Model.PostId })</p>
    <!--https://www.w3schools.com/bootstrap/tryit.asp?filename=trybs_ref_js_modal&stacked=h-->

</div>



<div>

    <a asp-controller="Blog" asp-action="Index">&#8592 Tilbake til alle blogger<br></a>
    <!--a asp-controller="Blog" asp-route-id=Model.BlogId asp-action="ReadBlog">&#8592 Tilbake til innlegg<br></a--> <!--Must study WebApi before this is possible-->
    <p>&#8592 @Html.ActionLink("Tilbake til innlegg", "ReadBlog", "Blog", new { id = Model.BlogId })</p>
</div>


@{
    ViewBag.Title2 = "Testing JQuery and Ajax with WebApi";
}

<h2>@ViewBag.Title2</h2>
<hr />


@section scripts{
    <script>
        //-------------------------Fra siste forelesning-----------------------------------------------//
        function handleError(xhr, textStatus, errorThrown){
            if (xhr.status === 401) //not sure why this is better than ==. It wants to compare types as well
                $('#responseContainer').html("Unauthorized request");
            else{
                var message = "<p>Status code: " + xhr.status + "</p>";
                message += "<pre>" + xhr.responseText + "</pre>";
                $('#responseContainer').html(message);
            }
        }

        function isUserLoggedIn(){
            return localStorage.getItem("token") !== null;
        }

        function getSavedToken() {
            return localStorage.getItem("token");
        }

        /*$('#btLogin').click(function() {
            $.post("/api/CommentsWebApi/VerifyLogin", $.param({username: $('#username').val(), passwd: $('#password').val()}))
                .done(function(token){
                    localStorage.setItem("token", token);
                    $('#btLoginContainer').hide();
                    $('#btLogoutContainer').show();
                    var message = "<p>Token received and saved in local storage under the key 'token'</p>";
                    message += "<p>Token Value: </p><p style='word-wrap:break-word'>" + token + "</p>";
                    $('#responseContainer').html(message);
                }).fail(handleError);
        });*/



        $('#btLogout').click(function(){
            $.ajax ({
                    url: "/identity/account/logout",
                    type: "GET"
                })
                .done(function(userDetails){
                    $('#responseContainer').html("<p>Cookie deleted and token deleted from local storage</p>");
                    localStorage.removeItem("token");
                    $('#btLogoutContainer').hide();
                    $('#btLoginContainer').show();
                })
                .fail(handleError);
        });

        //setInterval("Update()", 10000);

        //-------------------------View all comments-----------------------------------------------//
        function showAll() {
            listComments(function(comments) {

                var strComments = "";
                $.each(comments,
                    function(index, comment) {
                        strComments += `<tr><td>${comment.commentId} ${comment.text}</td></tr>`;
                    });
                $("#comments").html(strComments);

            });


            function listComments(callback) {
                $.ajax({
                    url: "/Api/CommentsWebApi/",
                    data: {},
                    type: "GET",
                    contentType: "application/json;charset=utf-8",
                }).then(function(comments) {
                    callback(comments);
                });
            }
        }

        //---------------------------View all comments on post-------------------------------------//
        function get(id) {

            listCommentOnPost(function (products) {
                var strProducts = "";
                $.each(products,
                    function(index, comment) {
                        strProducts += `<tr><td>${comment.commentId} ${comment.text}</td></tr>`;
                    });
                $("#commentsOnPost").html(strProducts);

            });

            function listCommentOnPost(callback) {
                $.ajax({
                    //beforeSend: function(xhr) {
                    //    if (isUserLoggedIn()) {
                    //        xhr.setRequestHeader('Authorization', 'Bearer ' + getSavedToken());
                    //    }
                    //},
                    url: "/Api/CommentsWebApi/" + id,
                    data: {},
                    type: "GET",
                    contentType: "application/json;charset=utf-8",
                }).then(function(comments) {
                    callback(comments);
                });
            }

            if (isUserLoggedIn()){
                $('#btLoginContainer').hide();
                $('#btLogoutContainer').show();
            }else {
                $('#btLoginContainer').show();
                $('#btLogoutContainer').hide();
            }
        }

        //-----------------------add a comment to the post-------------------------------------//

        function add() {

            var innhold = document.getElementById('add').value;

            var comment = {
                "text": innhold,
                "postId": @TempData["chosenId"]

            };

            $.ajax(
                {
                    type: "POST",
                    url: "/Api/CommentsWebApi/",
                    data: JSON.stringify(comment),
                    contentType: "application/json;charset=utf-8",
                    dataType: 'json',
                    success: function(result) {
                        $("#update").html("<p>POST ferdig ok ..." + "</p>");
                        $("#add").val('');
                        get(@TempData["chosenId"]);
                    },
                    error: function(req, status, error) {
                        $("#update").html("AJAX error");
                    }
                });



        }



        $(document).ready(function() {

            $("#commentsOnPost").html("<p>Venter på data fra innlegg..." + "</p>");
            //$("#comments").html("<p>Venter på data fra server" + "</p>");

            //showAll(); //viser absolutt alle kommentarer, uavhengig av hvilken post/innlegg de tilhører
            get(@TempData["chosenId"]);

            //Irina
            $("#loginButton").on("click",
                function () {
                    const email = $("#Input_Email").val();
                    const password = $("#Input_Password").val();
                    getToken(email, password);
                });

        });

        function getToken(userName, userPassword) {
            $.ajax({
                url: "/api/accounts/verifyLogin",
                    type: "POST",
                    data: JSON.stringify({
                        username: userName,
                        password: userPassword
                    }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json"
                })
                .done(function(result) {
                    localStorage.setItem("token", result.token);
                    localStorage.setItem("username", result.username);
                    $('#btLoginContainer').submit();
                /*.done(function (token) {
                    localStorage.setItem("token", token);
                    $('#btLoginContainer').hide();
                    $('#btLogoutContainer').show();
                    var message = "<p>Token received and saved in local storage under the key 'token'</p>";
                    message += "<p>Token Value: </p><p style='word-wrap:break-word'>" + token + "</p>";
                    $('#responseContainer').html(message);*/
                })
                .fail(function() {
                    console.log("Login error");
                });
        }


    </script>
}

<div>Kommentarer på innlegg via WebApi: </div>
<div id="commentsOnPost"></div>

<hr />
<div class="row">
    <div class="col-md-4">
        <!--input type="text" id="add" placeholder="legg inn Ny kommentar...">-->
        <textarea type="text" id="add" rows="4" cols="50" placeholder="legg inn ny kommentar..."></textarea>
        <input type="button" value="Legg til" onclick="add()">

    </div>
</div>
<!---->
<div style="margin: 50px auto; width:600px;">
    <div id="btLoginContainer">
        <input type="text" name="username" id="Input_Email" placeholder="Username" />
        <input type="password" name="password" id="Input_Password" placeholder="Password" />
        <button id="loginButton">Login</button><br>
        <label>Must have a valid username and password</label>
    </div>
    <div id="btLogoutContainer">
        <button id="btLogout">Logout</button>
    </div>
</div>


<div style="margin: 50px; background: lightgray" id="responseContainer">

</div>

    <div id="update"></div>
    
    <div class="container">
        <h2>Basic Modal Example</h2>
        <!-- Trigger the modal with a button -->
        <button type="button" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">Open Modal</button>

        <!-- Modal -->
        <div class="modal fade" id="myModal" role="dialog">
            <div class="modal-dialog">
    
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Modal Header</h4>
                    </div>
                    <div class="modal-body">
                        <p>Some text in the modal.</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
      
            </div>
        </div>
  
    </div>


    <!-- I tilfelle jeg trenger dette:

<form action="javascript:void(0);" method="POST" onsubmit="add()">
    <textarea type="text" id="add" rows="4" cols="50" placeholder="legg inn ny kommentar..."></textarea>
    <input type="submit" value="Legg til"/>
</form>

<input asp-for="PostId" type="hidden" class="form-control" />
<span asp-validation-for="PostId" class="text-danger"></span>

-->
