@model Blog.Models.Entities.Post

@{
    ViewData["Title"] = "EditPost";
}

<h1>EditPost</h1>

<h4>Post</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditPost">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="PostId" />
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Content" class="control-label"></label>
                <input asp-for="Content" class="form-control" />
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input asp-for="PostId" type="hidden" class="form-control" />
                <span asp-validation-for="PostId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input asp-for="BlogId" type="hidden" class="form-control" />
                <span asp-validation-for="BlogId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-controller="Blog" asp-action="Index">Tilbake til alle blogger</a> |
    @Html.ActionLink("Gå tilbake til innlegg", "ReadBlog", "Blog", new { id = Model.BlogId })
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
